//Bootstrap code
@256
D=A
@0
M=D
//call Sys.init 0
@FibonacciElement$ret.0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D

@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(FibonacciElement$ret.0)
//function Main.fibonacci 0
(Main.fibonacci)
//C_PUSH argument 0
@0
D=A
@ARG
D=M+D
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
D=M
M=D+1
//C_PUSH constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LABEL0
D;JLT
@SP
A=M-1
M=0
@LABEL0
D=A
@3
A=D+A
0;JMP
(LABEL0)
@SP
A=M-1
M=-1
// If-goto IF_TRUE
@SP
AM=M-1
D=M
@eq0
D;JEQ
@IF_TRUE
0;JMP
(eq0)
// goto IF_FALSE
@IF_FALSE
0;JMP
// Label IF_TRUE
(IF_TRUE)
//C_PUSH argument 0
@0
D=A
@ARG
D=M+D
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
D=M
M=D+1
//return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
D=M
@1
A=D-A
D=M
@THAT
M=D
@R13
D=M
@2
A=D-A
D=M
@THIS
M=D
@R13
D=M
@3
A=D-A
D=M
@ARG
M=D
@R13
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
// Label IF_FALSE
(IF_FALSE)
//C_PUSH argument 0
@0
D=A
@ARG
D=M+D
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
D=M
M=D+1
//C_PUSH constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
AM=M-1
D=M
A=A-1
MD=M-D
//call Main.fibonacci 1
@Main$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D

@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main$ret.1)
//C_PUSH argument 0
@0
D=A
@ARG
D=M+D
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
D=M
M=D+1
//C_PUSH constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
AM=M-1
D=M
A=A-1
MD=M-D
//call Main.fibonacci 1
@Main$ret.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D

@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main$ret.2)
//add
@SP
AM=M-1
D=M
A=A-1
MD=D+M
//return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
D=M
@1
A=D-A
D=M
@THAT
M=D
@R13
D=M
@2
A=D-A
D=M
@THIS
M=D
@R13
D=M
@3
A=D-A
D=M
@ARG
M=D
@R13
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Sys.init 0
(Sys.init)
//C_PUSH constant 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Main.fibonacci 1
@Sys$ret.3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D

@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Sys$ret.3)
// Label WHILE
(WHILE)
// goto WHILE
@WHILE
0;JMP
